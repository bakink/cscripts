2018-07-26
~~~~~~~~~~
1. Fix performance issue on main cursor of MAINTAIN_PLANS (IOD-10402)

2018-07-24
~~~~~~~~~~
1. Put into SPB description if plan came from cursor cache (MEM) or AWR (ODSI-1153)
2. 180 days to consider from AWR plan history assuming retention is at least this long (ODSI-1153)

2018-06-19
~~~~~~~~~~
1. Splitting l_min_snap_id into two: l_min_snap_id_sqlstat and l_min_snap_id_sts (sql tuning set).
2. Add following predicate to skip bogus DBA_HIST_SNAPSHOT rows: AND CAST(end_interval_time AS DATE) - CAST(begin_interval_time AS DATE) < 1
3. Relax by a factor of 2x the pctl_factor_avg thresholds

2018-06-13
~~~~~~~~~~
1. Increase number of rows on base table for a "GC" SQL to generate a SQL Plan Baseline from 5,000 to 100,000
1. Increase number of rows on base table for an "Unkown" SQL to generate a SQL Plan Baseline from 5,000 to 100,000

2018-06-08
~~~~~~~~~~
1. Lower k_instance_age_days from 7 days to 1 day.

2018-05-31
~~~~~~~~~~
1. A SQL statement has to execute at least once per hour in order to qualify for plan promotion or demorion. Threshold was once every 100s at least. Now is at least once every 3600s.

2018-05-22
~~~~~~~~~~
1. Performance of GC queries deteriorate over months, when the plan selected and pinned by Zapper contains index access, 
   and the amount of rows on underlying table gradually increases also over months.
   A 2 months probation window is not enough for GC queries, since performance degradation may take several months.
   This ticket is to enhance El Zapper and make it more vigilant with plan performance, even if such plans have been "fixed".
   With enhanced algorithm, if performance of a plan regresses over 100x the upper bound for category, then the plan gets disabled. 
   For example, for GC, this upper bound is 5 seconds, then if performance execution starts taking over 500 seconds (on average), 
   then the plan gets disabled, allowing the CBO to compute a new plan.

2018-05-12
~~~~~~~~~~
1. Create only SPB on one level when SQL_ID is passed as parameter

2018-05-11
~~~~~~~~~~
1. Incorporate the following two new SQL handles
/* getMaxTransactionCommitID */
/* getMaxTransactionOlderThan */
2. Adjust how early a cursor is a candidate for SPB consideration
  --k_first_load_time_days_cand    CONSTANT NUMBER := NVL(p_first_load_time_days_cand, k_aggressiveness_upper_limit - k_aggressiveness); -- a sql must be loaded into memory at least this many days before it is considered as candidate
  k_first_load_time_days_cand    CONSTANT NUMBER := ROUND(k_aggressiveness / 10, 1); -- a sql must be loaded into memory at least this many days before it is considered as candidate
  --k_first_load_time_days         CONSTANT NUMBER := 7 - k_aggressiveness; -- a sql must be loaded into memory at least this many days before it qualifies for a SPB
  k_first_load_time_days         CONSTANT NUMBER := ROUND(k_aggressiveness / 5, 1); -- a sql must be loaded into memory at least this many days before it qualifies for a SPB
  --
  A level 1 (best quality plan) cursor is evaluated as candidate only if older than 0.1d (2.4h), and to actually create a SPB it must be older than 0.2d (4.8h).
  A level 5 (worse quality plan) cursor is a candidate only if older than 0.5d (12h), and it qualifies for a SPB only if older than 1d (24h).

2018-04-11
~~~~~~~~~~
1. Extend probation window from 14 to 30 days
2. Extend num_rows threshold from 1000 to 5000

2018-04-09
~~~~~~~~~~
Fix error below on R2
ERROR at line 1:
ORA-00018: maximum number of sessions exceeded
ORA-06512: at "SYS.DBMS_SQL", line 1113
ORA-06512: at "C##IOD.IOD_SPM", line 1575
ORA-06512: at "C##IOD.IOD_SPM", line 2598
ORA-06512: at "C##IOD.IOD_SPM", line 3447
ORA-06512: at line 1

2018-04-06
~~~~~~~~~~
Fix error below on R0
ERROR at line 1:
ORA-01000: maximum open cursors exceeded
ORA-06512: at "C##IOD.IOD_SPM", line 1809
ORA-06512: at "C##IOD.IOD_SPM", line 2157
ORA-06512: at "C##IOD.IOD_SPM", line 3440
ORA-06512: at line 1

2018-04-05
~~~~~~~~~~
Fix error below reported on IOD-8642 and IOD-8656
ERROR at line 1:
ORA-06502: PL/SQL: numeric or value error
ORA-06512: at "SYS.XMLTYPE", line 272
ORA-06512: at line 1
ORA-06512: at line 6
ORA-06512: at "SYS.DBMS_SQL", line 1707
ORA-06512: at "C##IOD.IOD_SPM", line 206
ORA-06512: at "C##IOD.IOD_SPM", line 1907
ORA-06512: at "C##IOD.IOD_SPM", line 3399
ORA-06512: at line 1

2018-03-31
~~~~~~~~~~
1. Include now non-application SQL
2. New function to input SQL text and output KIEV application category

2018-03-05
~~~~~~~~~~
1. Trap, report and move on when: "ORA-04024: self-deadlock detected while trying to mutex pin cursor" is raised by sql_plan_baseline_other_xml

2018-02-21
~~~~~~~~~~
1. Trap, report and move on when: "ORA-04024: self-deadlock detected while trying to mutex pin cursor" is raised by workaround_ora_13831_internal or workaround_ora_06512_internal

Pending
~~~~~~~
1. Un-fix plans that haven't executed for over 14 days.
2. Validate at all PDBs: EXEC DBMS_SPM.CONFIGURE('plan_retention_weeks', 13); -- default 53
3. Validate at CDB: EXEC DBMS_WORKLOAD_REPOSITORY.MODIFY_SNAPSHOT_SETTINGS(topnsql=>300); -- default 30
4. Validate at CDB: ALTER SYSTEM SET "_awr_sql_child_limit" = 2000; -- defualt 200
5. Validate at CDB and all PDBs: ALTER SYSTEM SET optimizer_adaptive_plans = FALSE; -- default TRUE
6. Validate at CDB and all PDBs: ALTER SYSTEM SET optimizer_adaptive_statistics = FALSE; -- default FALSE
7. Validate at CDB and all PDBs: ALTER SYSTEM SET "_optimizer_adaptive_cursor_sharing" = FALSE; -- default TRUE
8. Validate at CDB and all PDBs: ALTER SYSTEM SET "_optimizer_extended_cursor_sharing_rel" = "NONE"; -- default SIMPLE
9. Validate at CDB and all PDBs: ALTER SYSTEM SET "_optimizer_extended_cursor_sharing" = "NONE"; -- default UDO
